learn ruby:
1,some definition about symbol in ruby
2,data construct
	numeric:
			Fixnum Bignum Float BigDecimal Rational complex
	String:
	  %q %Q
	Array:
	  %w|hello world|
	Hash:
	  when String is used as a key for Hash, this String is a copy, but another is not, so String is specil
	range:
	  function
	  	include?
		'<=>' should be define, if your want class which you define to be used in range
		'succ' should be define, if your want to use it with iterator
	symbol:
		%s[] '[]' can include all identifier
		intern/to_sym
		to_s/id2name
	"other thing":
		object's reference
		object_id
		object's class class superclass
		instance_if? (a.class == b.class)
		is_a?
		responsd_to?
		equal? (a.object_id==b.object_id) judge whether two variable is reference to the same instantialization object
		=== (a===b) b is a member of a
		=~ approximate equal and it is supported only in ruby1.9
		coerce like *_cast in c++
		clone/dup   make a copy for a object
		tainted?/untaint a object is pollution
3, express
	if else   if elsif
	unless
	case when
	?:
	while condition do
	for : it only can be used in express which has each iterator
	until condition do
	enumerator
4, class
变量类型：
1，实例变量
	(1),与实例关联的实例变量
		只能在实例方法中使用
	(2),与类关联的实例变量
		不能在实例方法中使用，只能在单键方法中使用
2，类变量
	可以在实例方法和单键方法中使用，定义方式与类实例变量相同，在类开头处定义
方法:
1,实例方法
	只能访问类变量和与实例关联的实例变量,通过类实例来访问
2,单键方法
	直接通过类名来访问,智能访问类变量和与类关联的实例变量,不能访问与实例关联的实例变量
	在类方法内继承父子关系之间的类方法之间可以互相调用且不需要指定接收者，但内部是不能调用实例方法


5,metaprograming
 1,对自身变量的修改
 eval, binding,instance_eval, class_eval,
 instance_variables, class_variables, constants, global_variables, local_variables
 instance_variable_get/set/include?......
 remove_instance_variable......
 2,方法
 列举:对于实例对象可调用methods, single, public_methods
 	  对于类可调用instance_methods, public_instance_methods, singleton_methods....
 调用方法:send, public_send
 定义，取消，别名:define_method, remove_method,undef_method
 定义别名:alias, alias_method
